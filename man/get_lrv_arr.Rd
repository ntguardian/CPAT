% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ChangePointTests.R
\name{get_lrv_arr}
\alias{get_lrv_arr}
\title{Long-Run Covariance Matrix Estimation for Early Change and Block
Heteroskedasticity}
\usage{
get_lrv_arr(X, kernel = "ba", bandwidth = "and")
}
\arguments{
\item{X}{The data matrix}

\item{kernel}{If character, the identifier of the kernel function as used in
\pkg{cointReg} (see \code{\link[cointReg]{getLongRunVar}}); if
function, the kernel function to be used for long-run variance
estimation (default is the Bartlett kernel)}

\item{bandwidth}{If character, the identifier for how to compute the
bandwidth as defined in \pkg{cointReg} (see
\code{\link[cointReg]{getBandwidth}}); if vector, the
bandwidth values to use; if single number, the plug-in value
for the corresponding kernel (the default is to use Andrews'
method)}
}
\value{
A 3D array of estimate of the long-run covariance matrices
}
\description{
Estimates the covariance matrix of the process \eqn{\{x_t \epsilon_t\}} in a
block-heteroskedasticity context; see \insertCite{horvathmillerrice20}{CPAT}
for more details.
}
\details{
This function computes the matrix \eqn{\hat{Q}_{t,T} = I_{t \leq T/2}
\hat{Q}_{t,1} + I_{t > T/2} \hat{Q}_{t,2}}, where \eqn{I} is the indicator
function. Let \eqn{\hat{e}_t = x_t \hat{\epsilon}_t} where
\eqn{\hat{\epsilon}_t} are the estimated residuals of the regression model.
Then, if \eqn{K} is the kernel function, \eqn{h_t} the bandwidth for a
sample of size \eqn{t}, and \eqn{\hat{V}_{t, u} = \hat{e}_t \hat{e}_{t + u}^T
+ \hat{e}_{t + u} \hat{e}_t^T},

\deqn{\hat{Q}_{t,1} = \frac{1}{2t} \sum_{s = 1}^t \hat{V}_{s,0} + \sum_{u =
1}^{t - 1} K(u/h_t) \frac{1}{t - u} \sum_{s = 1}^{t - u} \hat{V}_{s, u}}

and

\deqn{\hat{Q}_{t,2} = \frac{1}{2(T - t)} \sum_{s = t + 1}^T \hat{V}_{s,0} +
\sum_{u = 1}^{T - t - 1} K(u/h_{T - t}) \frac{1}{T - t + u} \sum_{s = t +
1}^{T - u} \hat{V}_{s, u}}

\code{\link[cointReg]{getBandwidth}} is used to find the missing parameter in
the bandwidth models as described by \insertCite{andrews91b}{CPAT} and
\insertCite{neweywest94}{CPAT} but actual implementation details
and the kernel functions used are not based on \pkg{cointReg} functionality.
For example, the approach used to find a bandwidth for the truncated kernel
is the one described in \insertCite{linsataka13}{CPAT}.

Only a single bandwidth value is estimated from the data, using the entire
data set. From this bandwidth value, all other bandwidths are determined,
taking the form \eqn{h_t = \hat{\gamma} t^{1/k}} (where \eqn{k = 3} for the
Bartlett kernel and \eqn{k = 5} in all other cases).
}
\examples{
x <- rnorm(50)
y <- 1 + 2 * x + rnorm(50)
df <- data.frame(x, y)
X <- model.matrix(y ~ x, data = df)
CPAT:::get_lrv_arr(X)
}
\references{
\insertAllCited{}
}
